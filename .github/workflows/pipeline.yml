name: CI/CD Deployment Pipeline
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.pkgver.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm install --no-audit --no-fund || true
      - run: npm test --if-present || true
      - run: |
          npm run build --if-present || true
          zip -r build.zip .
      - id: pkgver
        run: |
          v=$(node -p "try{require('./package.json').version}catch(e){'1.0.0'}")
          echo "version=$v" >> "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v4
        with: { name: build-artifact, path: build.zip }

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: { name: build-artifact }
      - id: meta
        run: |
          VERSION="${{ needs.build.outputs.version }}"
          TAG="${{ vars.BUILD_TAG || '' }}"
          NOTE="${{ vars.RELEASE_NOTE || '' }}"
          [ -z "$TAG" ] && TAG="staging-v$VERSION"
          [ -z "$NOTE" ] && NOTE="Testing pre-production release"
          echo "tag=$TAG"  >> "$GITHUB_OUTPUT"
          echo "note=$NOTE" >> "$GITHUB_OUTPUT"
      - name: Recreate staging release
        env: { GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} }
        run: |
          gh release delete "${{ steps.meta.outputs.tag }}" -y || true
          gh release create "${{ steps.meta.outputs.tag }}" build.zip --notes "${{ steps.meta.outputs.note }}"

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production   # ← disparará la aprobación por reviewers
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: { name: build-artifact }
      - id: meta
        run: |
          VERSION="${{ needs.build.outputs.version }}"
          TAG="${{ vars.BUILD_TAG || '' }}"
          NOTE="${{ vars.RELEASE_NOTE || '' }}"
          [ -z "$TAG" ] && TAG="prod-v$VERSION"
          [ -z "$NOTE" ] && NOTE="Production release"
          echo "tag=$TAG"  >> "$GITHUB_OUTPUT"
          echo "note=$NOTE" >> "$GITHUB_OUTPUT"
      - name: Recreate prod release
        env: { GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} }
        run: |
          gh release delete "${{ steps.meta.outputs.tag }}" -y || true
          gh release create "${{ steps.meta.outputs.tag }}" build.zip --notes "${{ steps.meta.outputs.note }}"
